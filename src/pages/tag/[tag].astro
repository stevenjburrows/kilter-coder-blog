---
import { getCollection } from "astro:content";
import BaseHead from "../../components/BaseHead.astro";
import Header from "../../components/Header.astro";
import Footer from "../../components/Footer.astro";
import Post from "../../components/Post.astro";
import ColorScript from "../../components/ColorScript.astro";

import { SITE_TITLE, SITE_DESCRIPTION } from "../../config";
import { getLatestTags, getPostsByTag } from "../../lib/client";

export async function getStaticPaths() {
  const tagsObject = await getLatestTags();
  const allTags = tagsObject.publication.posts.edges.map((edge) => {
    return edge.node.tags.map((tag) => tag.slug);
  });

  const tags = [...new Set(allTags.flat(4))];

  return tags.map((t) => {
    return {
      params: { tag: t },
    };
  });
}

const { tag } = Astro.params;
console.log("currentTag", tag);
let after = "0";

const data = await getPostsByTag(tag, 20);
const allPosts = data.publication.posts.edges;

console.log(allPosts);
---

<!doctype html>
<html lang="en-gb">
  <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
  <body>
    <Header />
    <main>
      <content>
        <h3>Posts tagged with "{tag}"</h3>
        <ul class="tags-list">
          {
            allPosts.map((postData) => (
              <Post
                description={postData.node.brief}
                date={postData.node.publishedAt}
                slug={postData.node.slug}
                title={postData.node.title}
                tags={postData.node.tags}
                readTime={postData.node.readTimeInMinutes}
              />
            ))
          }
        </ul>
      </content>
      <Footer />
    </main>
    <ColorScript />
  </body>
</html>
